<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lee.attendance.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="lee.attendance.domain.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="portrait" property="portrait" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="register_time" property="registerTime" jdbcType="DATE" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, portrait, introduce, sex, register_time, email, phone, real_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="lee.attendance.domain.UserInfo" >
    insert into user_info (id, portrait, introduce, 
      sex, register_time, email, 
      phone, real_name)
    values (#{id,jdbcType=INTEGER}, #{portrait,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{registerTime,jdbcType=DATE}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="lee.attendance.domain.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="portrait != null" >
        portrait,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=DATE},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="lee.attendance.domain.UserInfo" >
    update user_info
    <set >
      <if test="portrait != null" >
        portrait = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=DATE},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="lee.attendance.domain.UserInfo" >
    update user_info
    set portrait = #{portrait,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      register_time = #{registerTime,jdbcType=DATE},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 根据用户id查询用户姓名，头像信息 -->
  <select id="selectById" parameterType="java.lang.Integer" resultType="UserInfo">
  	select real_name as realName, portrait from user_info where id = #{userId,jdbcType=INTEGER}
  </select>
  <!-- 根据用户id查询用户账号，基本信息 -->
  <select id="selectUserAccountById" parameterType="java.lang.Integer" resultType="UserAccountInfo">
  	select account, user_info.id, portrait, introduce, sex, register_time as registerTime, email, phone, real_name as realName from user_info left join user_verification on user_info.id = user_verification.id where  user_info.id = #{userId,jdbcType=INTEGER}
  </select>
</mapper>